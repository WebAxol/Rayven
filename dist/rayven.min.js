/*! For license information please see rayven.min.js.LICENSE.txt */
var __webpack_modules__={"./lib/config.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst CONFIG = {\n    resolution: 600,\n    fog: true,\n    fogColor: `${20 * 2},${0 * 2},${0 * 2}`,\n    blurEffect: 0,\n    lightLevel: 40\n};\nvar lightCycle = 1;\nsetInterval(() => {\n    let color = (1 + Math.sin(lightCycle));\n    lightCycle += 0.1;\n}, 10);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CONFIG);\n//# sourceMappingURL=config.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/config.js?')},"./lib/proto/Circle.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   circlePrototype: () => (/* binding */ circlePrototype)\n/* harmony export */ });\n/* harmony import */ var _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/physics/Vector2D.js */ "./lib/utils/physics/Vector2D.js");\n\n;\nconst circlePrototype = {\n    name: "Circle",\n    attributes: {\n        center: new _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"](0, 0),\n        radius: 1,\n        color: \'255,0,0\',\n        opacity: 1\n    },\n    collections: new Set(["Circles"])\n};\n\n//# sourceMappingURL=Circle.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/proto/Circle.js?')},"./lib/proto/HorizontalWall.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   horizontalWallPrototype: () => (/* binding */ horizontalWallPrototype)\n/* harmony export */ });\nconst horizontalWallPrototype = {\n    name: "HorizontalWall",\n    attributes: {\n        color: \'white\',\n        startX: NaN,\n        endX: NaN,\n        posY: NaN,\n        opacity: 1\n    },\n    collections: new Set(["HorizontalWalls"])\n};\n\n//# sourceMappingURL=HorizontalWall.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/proto/HorizontalWall.js?')},"./lib/proto/Ray.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rayPrototype: () => (/* binding */ rayPrototype)\n/* harmony export */ });\n/* harmony import */ var _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/physics/Vector2D.js */ "./lib/utils/physics/Vector2D.js");\n\n;\nconst rayPrototype = {\n    name: "Ray",\n    attributes: {\n        active: true,\n        lambda: NaN,\n        source: new _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"](NaN, NaN),\n        direction: new _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"](NaN, NaN),\n        reflected: undefined,\n        level: 1,\n        collidesWith: undefined,\n        collidesAt: (new _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"](NaN, NaN))\n    }\n};\n\n//# sourceMappingURL=Ray.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/proto/Ray.js?')},"./lib/proto/VerticalWall.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verticalWallPrototype: () => (/* binding */ verticalWallPrototype)\n/* harmony export */ });\nconst verticalWallPrototype = {\n    name: "VerticalWall",\n    attributes: {\n        color: \'white\',\n        startY: NaN,\n        endY: NaN,\n        posX: NaN,\n        opacity: 1\n    },\n    collections: new Set(["VerticalWalls"])\n};\n\n//# sourceMappingURL=VerticalWall.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/proto/VerticalWall.js?')},"./lib/rayven.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _kernox_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../kernox.js */ \"./vendor/kernox.min.js\");\n/* harmony import */ var _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/scene/Camera.js */ \"./lib/utils/scene/Camera.js\");\n/* harmony import */ var _utils_scene_SceneBuilder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/scene/SceneBuilder.js */ \"./lib/utils/scene/SceneBuilder.js\");\n/* harmony import */ var _setup_prototypes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./setup/prototypes.js */ \"./lib/setup/prototypes.js\");\n/* harmony import */ var _setup_collections_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./setup/collections.js */ \"./lib/setup/collections.js\");\n/* harmony import */ var _setup_systems_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./setup/systems.js */ \"./lib/setup/systems.js\");\n\n\n\n\n\n\nconst app = new _kernox_js__WEBPACK_IMPORTED_MODULE_0__.Kernox();\nconst rayven = {\n    name: \"rayven\",\n    prototypes: _setup_prototypes_js__WEBPACK_IMPORTED_MODULE_3__.prototypes,\n    collections: _setup_collections_js__WEBPACK_IMPORTED_MODULE_4__.collections,\n    systems: _setup_systems_js__WEBPACK_IMPORTED_MODULE_5__.systems\n};\napp.use(rayven);\n_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.init(app, {\n    x: 22,\n    y: 17,\n    dx: -1,\n    dy: -2,\n    fov: 100.1\n});\nconst scene = [\n    { type: 'Wall', info: [[-1e10, -1e10], [-1e10, 1e10], 1, '255,0,0'] },\n    { type: 'Wall', info: [[-1e10, -1e10], [1e10, -1e10], 1, '255,0,0'] },\n    { type: 'Wall', info: [[1e10, -1e10], [1e10, 1e10], 1, '255,0,0'] },\n    { type: 'Wall', info: [[1e10, 1e10], [-1e10, 1e10], 1, '255,0,0'] },\n    { type: 'Wall', info: [[2, 2], [4, 2], 1, '255,0,0'] },\n    { type: 'Wall', info: [[2, 2], [2, 4], 1, '0,255,0'] },\n    { type: 'Wall', info: [[5, 5], [5, 25], 1, '255,255,0'] },\n    { type: 'Wall', info: [[10, 5], [10, -20], 1, '0,255,0'] },\n    { type: 'Wall', info: [[12, 5], [12, -20], 1, '255,0,0'] },\n    { type: 'Wall', info: [[5, -24], [5, -25], 1, '255,0,100'] },\n    { type: 'Wall', info: [[5, -21], [5, -20], 1, '0,255,100'] },\n    { type: 'Wall', info: [[5, -21], [-20, -21], 1, '0,255,0'] },\n    { type: 'Wall', info: [[5, -24], [-20, -24], 1, '255,0,100'] },\n    { type: 'Wall', info: [[5, -20], [10, -20], 1, '0,255,100'] },\n    { type: 'Wall', info: [[12, -20], [25, -20], 1, '0,255,100'] },\n    { type: 'Wall', info: [[5, -25], [35, -25], 1, '255,157,0'] },\n    { type: 'Wall', info: [[25, -20], [25, -25], 1, '255,157,0'] },\n    { type: 'Wall', info: [[-25, -20], [-25, -25], 1, '255,157,0'] },\n    { type: 'Wall', info: [[5, 5], [10, 5], 1, '0,255,100'] },\n    { type: 'Wall', info: [[12, 5], [25, 5], 1, '0,255,100'] },\n    { type: 'Wall', info: [[5, 7], [7, 7], 1, '0,255,100'] },\n    { type: 'Wall', info: [[7, 5], [7, 7], 1, '37, 190, 42'] },\n    { type: 'Wall', info: [[7, 13], [7, 20], 0.9, '0,155,200'] },\n    { type: 'Wall', info: [[15, 15], [15, 14], 1, '0,100,100'] },\n    { type: 'Wall', info: [[7, 20], [15, 20], 0.3, '255,46,87'] },\n    { type: 'Wall', info: [[7, 15], [15, 15], 0.3, '0,100,100'] },\n    { type: 'Wall', info: [[7, 14], [15, 14], 1, '0,100,100'] },\n    { type: 'Wall', info: [[15, 19], [15, 20], 1, '255,46,87'] },\n    { type: 'Wall', info: [[25, 5], [25, 25], 1, '150,150,150'] },\n    { type: 'Wall', info: [[5, 25], [25, 25], 1, '255,255,255'] },\n    { type: 'Wall', info: [[15, 7], [17, 7], 1, '255,0,255'] },\n    { type: 'Wall', info: [[15, 7], [15, 10], 1, '255,155,255'] },\n    { type: 'Wall', info: [[15, 10], [15.5, 10], 1, '255,155,200'] },\n    { type: 'Wall', info: [[17, 7], [17, 10], 1, '255,155,255'] },\n    { type: 'Wall', info: [[16.5, 7], [16.5, 10], 0.1, '255,0,255'] },\n    { type: 'Wall', info: [[16.5, 10], [17, 10], 1, '255,155,200'] },\n    { type: 'Wall', info: [[19, 12], [22, 12], 0.01, '0,255,100'] },\n    { type: 'Wall', info: [[19, 15], [22, 15], 0.01, '0,255,100'] },\n    { type: 'Wall', info: [[22, 12], [22, 15], 0.01, '255,157,0'] },\n    { type: 'Wall', info: [[19, 12], [19, 15], 0.01, '255,157,0'] },\n    { type: 'Circle', info: [_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.pos, 0.3, 1, '255,0,0'] },\n    { type: 'Circle', info: [{ x: 17, y: 17 }, 1.0, 1, '0, 0, 0'] },\n];\nconst sceneBuilder = new _utils_scene_SceneBuilder_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](app);\nsceneBuilder.build(scene);\nconst commands = {\n    'o': () => { console.log(app); },\n    'c': () => { console.log(_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera); },\n    'p': () => {\n        console.log('execution paused');\n    },\n    'r': () => {\n        app.execute();\n        console.log('execution resumed');\n    }\n};\nwindow.addEventListener('keydown', (e) => {\n    if (commands[e.key])\n        commands[e.key]();\n});\nconsole.log(app);\napp.execute();\ndocument.addEventListener(\"dblclick\", () => {\n    document.documentElement.requestFullscreen().then((res) => {\n        console.log(\"XXXXXXXXXXXXXX\");\n    }).catch((e) => {\n        console.log(e);\n    });\n});\n//# sourceMappingURL=rayven.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/rayven.js?")},"./lib/setup/canvases.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_rendering_CanvasManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/rendering/CanvasManager.js */ \"./lib/utils/rendering/CanvasManager.js\");\n\n;\nconst canvases = {\n    canvas3d: _utils_rendering_CanvasManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createCanvas({\n        id: 'canvas3d',\n        width: 300 * 4 * 1,\n        height: 170 * 4 * 1,\n        style: {\n            width: '100%',\n            zIndex: 2,\n            background: \"black\",\n            'image-rendering': 'pixelated',\n        }\n    }),\n    background: _utils_rendering_CanvasManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createCanvas({\n        id: 'background',\n        width: 3000 / 4,\n        height: 1700 / 4,\n        style: {\n            zIndex: 1,\n            width: '100%',\n        }\n    }),\n    canvas2d: _utils_rendering_CanvasManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createCanvas({\n        id: 'canvas2d',\n        width: 100,\n        height: 100,\n        style: {\n            zIndex: 3,\n            position: 'absolute',\n            borderRadius: '50%',\n            top: '5px',\n            right: '5px',\n            width: '20%',\n            height: 'auto',\n            opacity: '0.7',\n            'image-rendering': 'pixelated'\n        }\n    })\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (canvases);\n//# sourceMappingURL=canvases.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/setup/canvases.js?")},"./lib/setup/collections.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collections: () => (/* binding */ collections)\n/* harmony export */ });\n/* harmony import */ var _kernox_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../kernox.js */ "./vendor/kernox.min.js");\n\nclass HorizontalWalls extends _kernox_js__WEBPACK_IMPORTED_MODULE_0__.ArrayList {\n}\n;\nclass VerticalWalls extends _kernox_js__WEBPACK_IMPORTED_MODULE_0__.ArrayList {\n}\n;\nclass Circles extends _kernox_js__WEBPACK_IMPORTED_MODULE_0__.ArrayList {\n}\n;\nconst collections = [\n    HorizontalWalls,\n    VerticalWalls,\n    Circles\n];\n//# sourceMappingURL=collections.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/setup/collections.js?')},"./lib/setup/images.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_rendering_ImageLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/rendering/ImageLoader.js */ "./lib/utils/rendering/ImageLoader.js");\n\nconst loader = new _utils_rendering_ImageLoader_js__WEBPACK_IMPORTED_MODULE_0__["default"]();\nloader.load(\'bricks\', \'floor.webp\');\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (loader);\n//# sourceMappingURL=images.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/setup/images.js?')},"./lib/setup/prototypes.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prototypes: () => (/* binding */ prototypes)\n/* harmony export */ });\n/* harmony import */ var _proto_HorizontalWall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../proto/HorizontalWall.js */ "./lib/proto/HorizontalWall.js");\n/* harmony import */ var _proto_VerticalWall_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proto/VerticalWall.js */ "./lib/proto/VerticalWall.js");\n/* harmony import */ var _proto_Ray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../proto/Ray.js */ "./lib/proto/Ray.js");\n/* harmony import */ var _proto_Circle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../proto/Circle.js */ "./lib/proto/Circle.js");\n\n\n\n\nconst prototypes = [\n    _proto_HorizontalWall_js__WEBPACK_IMPORTED_MODULE_0__.horizontalWallPrototype,\n    _proto_VerticalWall_js__WEBPACK_IMPORTED_MODULE_1__.verticalWallPrototype,\n    _proto_Circle_js__WEBPACK_IMPORTED_MODULE_3__.circlePrototype,\n    _proto_Ray_js__WEBPACK_IMPORTED_MODULE_2__.rayPrototype,\n];\n//# sourceMappingURL=prototypes.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/setup/prototypes.js?')},"./lib/setup/systems.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   systems: () => (/* binding */ systems)\n/* harmony export */ });\n/* harmony import */ var _systems_Camera_CameraMover_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../systems/Camera/CameraMover.js */ "./lib/systems/Camera/CameraMover.js");\n/* harmony import */ var _systems_Camera_InputHandler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../systems/Camera/InputHandler.js */ "./lib/systems/Camera/InputHandler.js");\n/* harmony import */ var _systems_SceneRendering_Orchestrator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../systems/SceneRendering/Orchestrator.js */ "./lib/systems/SceneRendering/Orchestrator.js");\n/* harmony import */ var _systems_2DRendering_SceneRenderer2D_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../systems/2DRendering/SceneRenderer2D.js */ "./lib/systems/2DRendering/SceneRenderer2D.js");\n\n\n\n\nconst systems = [\n    _systems_2DRendering_SceneRenderer2D_js__WEBPACK_IMPORTED_MODULE_3__["default"],\n    _systems_SceneRendering_Orchestrator_js__WEBPACK_IMPORTED_MODULE_2__["default"],\n    _systems_Camera_CameraMover_js__WEBPACK_IMPORTED_MODULE_0__["default"],\n    _systems_Camera_InputHandler_js__WEBPACK_IMPORTED_MODULE_1__["default"]\n];\n//# sourceMappingURL=systems.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/setup/systems.js?')},"./lib/setup/webGL.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gl: () => (/* binding */ gl),\n/* harmony export */   locatorPromise: () => (/* binding */ locatorPromise)\n/* harmony export */ });\n/* harmony import */ var _utils_rendering_LocatorGL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/rendering/LocatorGL.js */ "./lib/utils/rendering/LocatorGL.js");\n/* harmony import */ var _utils_rendering_BuilderGL_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/rendering/BuilderGL.js */ "./lib/utils/rendering/BuilderGL.js");\n/* harmony import */ var _canvases_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./canvases.js */ "./lib/setup/canvases.js");\n/* harmony import */ var _images_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./images.js */ "./lib/setup/images.js");\n\n\n\n\nconst canvas = _canvases_js__WEBPACK_IMPORTED_MODULE_2__["default"].canvas3d;\nconst gl = canvas.getContext("webgl2");\nconst locatorPromise = new Promise(async (resolve, reject) => {\n    const _locator = new _utils_rendering_LocatorGL_js__WEBPACK_IMPORTED_MODULE_0__["default"]();\n    console.log("%cPreparing WebGL...", "color: skyblue");\n    console.log(\'\\x1b[36m\', "building shaders...");\n    const rectangleVertexShader = await _utils_rendering_BuilderGL_js__WEBPACK_IMPORTED_MODULE_1__["default"].buildShader(gl, "VERTEX_SHADER", "./shaders/rect.vert");\n    const frontFragmentShader = await _utils_rendering_BuilderGL_js__WEBPACK_IMPORTED_MODULE_1__["default"].buildShader(gl, "FRAGMENT_SHADER", "./shaders/front.frag");\n    const lyingFragmentShader = await _utils_rendering_BuilderGL_js__WEBPACK_IMPORTED_MODULE_1__["default"].buildShader(gl, "FRAGMENT_SHADER", "./shaders/lying.frag");\n    console.log("\\n\\n");\n    console.log("%c[WebGL DEBUG]: shaders\' status", "color : skyblue");\n    console.table({\n        rectangleVertexShader,\n        frontFragmentShader,\n        lyingFragmentShader\n    });\n    if (!rectangleVertexShader ||\n        !frontFragmentShader ||\n        !lyingFragmentShader)\n        return reject("There was an error at building shaders");\n    console.log(\'\\x1b[36m\', "building programs...");\n    const frontProgram = _utils_rendering_BuilderGL_js__WEBPACK_IMPORTED_MODULE_1__["default"].buildProgram(gl, rectangleVertexShader, frontFragmentShader);\n    const lyingProgram = _utils_rendering_BuilderGL_js__WEBPACK_IMPORTED_MODULE_1__["default"].buildProgram(gl, rectangleVertexShader, lyingFragmentShader);\n    console.log("\\n\\n");\n    console.log("%c[WebGL DEBUG]: programs\' status", "color : skyblue");\n    console.table({\n        frontProgram,\n        lyingProgram\n    });\n    if (!frontProgram || !lyingProgram)\n        return reject("There was an error at building programs");\n    console.log(\'\\x1b[36m\', "allocating programs...");\n    _locator.registerProgram("front", frontProgram);\n    _locator.registerProgram("lying", lyingProgram);\n    console.log(\'\\x1b[36m\', "creating buffers...");\n    gl.useProgram(frontProgram);\n    const frontBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, frontBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(3000 * 5 * 8), gl.DYNAMIC_DRAW);\n    const frontElementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, frontElementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(3000 * 3 * 4), gl.DYNAMIC_DRAW);\n    gl.useProgram(lyingProgram);\n    const lyingBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, lyingBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(3000 * 3 * 16), gl.DYNAMIC_DRAW);\n    const lyingElementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, lyingElementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(3000 * 3 * 8), gl.DYNAMIC_DRAW);\n    if (!frontBuffer ||\n        !frontElementBuffer ||\n        !lyingBuffer ||\n        !lyingElementBuffer)\n        return reject("There was an error at creating buffers");\n    console.log(\'\\x1b[36m\', "allocating buffers...");\n    _locator.registerBuffer(frontBuffer, "ARRAY_BUFFER", "frontBuffer");\n    _locator.registerBuffer(frontElementBuffer, "ELEMENT_ARRAY_BUFFER", "frontBuffer");\n    _locator.registerBuffer(lyingBuffer, "ARRAY_BUFFER", "lyingBuffer");\n    _locator.registerBuffer(lyingElementBuffer, "ELEMENT_ARRAY_BUFFER", "lyingBuffer");\n    console.log("\\n\\n");\n    console.log("%cWebGL was prepared successfully!", "color: lawngreen; background:black");\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.ALWAYS);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    const texture = gl.createTexture();\n    const bricks = _images_js__WEBPACK_IMPORTED_MODULE_3__["default"].get("bricks");\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, bricks);\n    return resolve(_locator);\n});\n\n//# sourceMappingURL=webGL.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/setup/webGL.js?')},"./lib/systems/2DRendering/SceneRenderer2D.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _kernox_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../kernox.js */ "./vendor/kernox.min.js");\n/* harmony import */ var _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/physics/Vector2D.js */ "./lib/utils/physics/Vector2D.js");\n/* harmony import */ var _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/scene/Camera.js */ "./lib/utils/scene/Camera.js");\n/* harmony import */ var _setup_canvases_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../setup/canvases.js */ "./lib/setup/canvases.js");\n\n\n\n\nclass SceneRenderer2D extends _kernox_js__WEBPACK_IMPORTED_MODULE_0__.System {\n    constructor() {\n        super(...arguments);\n        this.ctx = _setup_canvases_js__WEBPACK_IMPORTED_MODULE_3__["default"].canvas2d.getContext(\'2d\');\n        this.scale = 1.5 * 3;\n    }\n    init() {\n        this.horizontalWalls = this.getCollection(\'HorizontalWalls\');\n        this.verticalWalls = this.getCollection(\'VerticalWalls\');\n        this.circles = this.getCollection(\'Circles\');\n    }\n    execute() {\n        this.ctx.fillStyle = \'rgba(0,0,0,1)\';\n        this.ctx.fillRect(0, 0, 3000, 3000);\n        for (const wall of this.horizontalWalls) {\n            this.renderWall(wall);\n        }\n        for (const wall of this.verticalWalls) {\n            this.renderWall(wall);\n        }\n        for (const circle of this.circles) {\n            this.renderCircle(circle);\n        }\n    }\n    ;\n    renderWall(wall) {\n        if (!_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__.camera.castCenter)\n            return;\n        const deg = _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__.camera.castCenter?.direction.angle() * (180 / Math.PI);\n        this.ctx.strokeStyle = `rgba(${wall.color},1)`;\n        this.ctx.lineWidth = 1;\n        let from = { x: wall.startX || wall.posX, y: wall.posY || wall.startY };\n        let to = { x: wall.endX || wall.posX, y: wall.posY || wall.endY };\n        from = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotate(from, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__.camera.pos, deg);\n        to = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotate(to, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__.camera.pos, deg);\n        from = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(_utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(from, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__.camera.pos), { x: -10, y: -10 }).scale(this.scale);\n        to = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(_utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(to, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__.camera.pos), { x: -10, y: -10 }).scale(this.scale);\n        this.ctx.beginPath();\n        this.ctx.moveTo(from.x, from.y);\n        this.ctx.lineTo(to.x, to.y);\n        this.ctx.closePath();\n        this.ctx.stroke();\n    }\n    renderCircle(circle) {\n        if (!_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__.camera.castCenter)\n            return;\n        const deg = _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__.camera.castCenter?.direction.angle() * (180 / Math.PI);\n        this.ctx.strokeStyle = `rgb(${circle.color})`;\n        this.ctx.lineWidth = 1;\n        let center = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].rotate(circle.center, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__.camera.pos, deg);\n        center = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(_utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(center, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_2__.camera.pos), { x: -10, y: -10 }).scale(this.scale);\n        this.ctx.beginPath();\n        this.ctx.arc(center.x, center.y, circle.radius * this.scale, 0, 2 * Math.PI);\n        this.ctx.stroke();\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SceneRenderer2D);\n//# sourceMappingURL=SceneRenderer2D.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/systems/2DRendering/SceneRenderer2D.js?')},"./lib/systems/Camera/CameraMover.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _kernox_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../kernox.js */ "./vendor/kernox.min.js");\n/* harmony import */ var _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/scene/Camera.js */ "./lib/utils/scene/Camera.js");\n/* harmony import */ var _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/physics/Vector2D.js */ "./lib/utils/physics/Vector2D.js");\n\n\n\nclass CameraMover extends _kernox_js__WEBPACK_IMPORTED_MODULE_0__.System {\n    constructor() {\n        super(...arguments);\n        this.dt = 0;\n        this.speed = 0;\n        this.commandKeyMap = {\n            w: () => { this.translateCamera(1, 0); },\n            s: () => { this.translateCamera(-1, 0); },\n            a: () => { this.translateCamera(0, 1); },\n            d: () => { this.translateCamera(0, -1); },\n            k: () => { this.rotateCamera(30 * this.dt); },\n            l: () => { this.rotateCamera(-30 * this.dt); },\n        };\n        this.control = {\n            w: false,\n            s: false,\n            d: false,\n            a: false,\n            k: false,\n            l: false\n        };\n    }\n    init() {\n        this.attachToEvent("keydown", (e) => { this.onkeydown(e); });\n        this.attachToEvent("keyup", (e) => { this.onkeyup(e); });\n    }\n    execute() {\n        this.dt = 50 / this.__kernox.fps;\n        this.speed = 0.09 * this.dt;\n        let keys = Object.keys(this.control);\n        keys.forEach((key) => {\n            if (this.control[key] === true) {\n                this.commandKeyMap[key]();\n            }\n        });\n    }\n    rotateCamera(angle = 0) {\n        if (!_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera || !_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castEdge || !_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castCenter)\n            return false;\n        const complex = [Math.cos(angle / Math.PI / 180), Math.sin(angle / Math.PI / 180)];\n        _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castCenter.direction.complexRotate(complex);\n        _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castEdge.direction.complexRotate(complex);\n    }\n    translateCamera(forward = 0, lateral = 0) {\n        if (!_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera || !_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castEdge || !_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castCenter)\n            return false;\n        const complex = [Math.cos(Math.PI / 2), Math.sin(Math.PI / 2)];\n        let frontalMovement = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_2__["default"].scale(_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castCenter.direction, forward);\n        let lateralMovement = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_2__["default"].complexRotate(_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castCenter.direction, complex).scale(lateral);\n        let movementDirection = frontalMovement.add(lateralMovement).normalize();\n        let displacement = movementDirection.scale(this.speed);\n        _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.pos.add(displacement);\n    }\n    onkeydown(info) {\n        if (this.control[info.key] !== undefined && this.control[info.key] !== true) {\n            this.control[info.key] = true;\n        }\n    }\n    onkeyup(info) {\n        if (this.control[info.key] !== undefined && this.control[info.key] !== false) {\n            this.control[info.key] = false;\n        }\n    }\n}\n;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CameraMover);\n//# sourceMappingURL=CameraMover.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/systems/Camera/CameraMover.js?')},"./lib/systems/Camera/InputHandler.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _kernox_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../kernox.js */ \"./vendor/kernox.min.js\");\n\nclass InputHandler extends _kernox_js__WEBPACK_IMPORTED_MODULE_0__.System {\n    init() {\n        window.addEventListener('keydown', (e) => { this.keydown(e); });\n        window.addEventListener('keyup', (e) => { this.keyup(e); });\n        return true;\n    }\n    keydown(e) {\n        if (!this.__kernox.paused)\n            this.dispatchEvent('keydown', { key: e.key });\n    }\n    keyup(e) {\n        if (!this.__kernox.paused)\n            this.dispatchEvent('keyup', { key: e.key });\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InputHandler);\n//# sourceMappingURL=InputHandler.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/systems/Camera/InputHandler.js?")},"./lib/systems/SceneRendering/DataModeller.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/physics/Vector2D.js */ "./lib/utils/physics/Vector2D.js");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config.js */ "./lib/config.js");\n/* harmony import */ var _setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../setup/webGL.js */ "./lib/setup/webGL.js");\n/* harmony import */ var _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/scene/Camera.js */ "./lib/utils/scene/Camera.js");\n\n\n\n\nclass DataModeller {\n    constructor(chief) {\n        this.chief = chief;\n        this.memoryIndex = 0;\n        this.initialized = false;\n        const head = {};\n        const n = 14;\n        var node = head;\n        for (let i = 0; i <= n; i++) {\n            node.itemID = -1;\n            node.color = [NaN, NaN];\n            node.x = [NaN, NaN];\n            node.y = [NaN, NaN];\n            node.z = [NaN, NaN];\n            node.t = [NaN, NaN];\n            node.l = [1, 1];\n            node.child = undefined;\n            node.stripped = false;\n            if (i == n)\n                continue;\n            node.child = {};\n            node = node.child;\n        }\n        this.cache = head;\n    }\n    init() {\n        const locator = this.chief.locator;\n        this.frontBuffer = locator.getBuffer("ARRAY_BUFFER", "frontBuffer");\n        this.frontElementBuffer = locator.getBuffer("ELEMENT_ARRAY_BUFFER", "frontBuffer");\n        this.lyingBuffer = locator.getBuffer("ARRAY_BUFFER", "lyingBuffer");\n        this.lyingElementBuffer = locator.getBuffer("ELEMENT_ARRAY_BUFFER", "lyingBuffer");\n        this.initialized = true;\n    }\n    reset() {\n        this.memoryIndex = 0;\n        var cache = this.cache;\n        while (cache) {\n            cache.itemID = -1;\n            cache.stripped = true;\n            cache = cache.child;\n        }\n    }\n    mapTexture(collidesAt, item) {\n        if (collidesAt == null)\n            return 0;\n        if (item.getType() == "Circle")\n            return this.mapCylindricalTexture(collidesAt, item);\n        return this.mapLinearTexture(collidesAt, item);\n    }\n    mapLinearTexture(collidesAt, wall) {\n        let percentage = 0;\n        if (wall.getType() === \'HorizontalWall\') {\n            let wallLength = wall.endX - wall.startX;\n            percentage = Math.abs(((collidesAt.x - wall.startX)));\n        }\n        else if (wall.getType() === \'VerticalWall\') {\n            let wallLength = wall.endY - wall.startY;\n            percentage = Math.abs((collidesAt.y - wall.startY));\n        }\n        return percentage;\n    }\n    mapCylindricalTexture(collidesAt, cyl) {\n        let _angle = Math.ceil(this.chief.world.frame / 1) / 50;\n        const direction = new _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"](Math.cos(_angle), Math.sin(_angle));\n        const centerToPoint = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].sub(collidesAt, cyl.center);\n        const angle = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].angleBetween(centerToPoint, direction);\n        return angle / (Math.PI / (cyl.radius * 2));\n    }\n    model(ray, angle, index) {\n        if (!this.initialized)\n            this.init();\n        const znear = 1 / Math.tan(_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_3__.camera.FOV * Math.PI / 360);\n        const deltaAngle = (_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_3__.camera.FOV / _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].resolution) * (Math.PI / 180) * -1;\n        var cache = this.cache;\n        var itemID = -1;\n        var depth = 0;\n        var currentX, currentY, currentT, currentL = 1;\n        var currentColor;\n        var lyingSurf = [];\n        var frontSurf = [];\n        var lyingElement = [];\n        var frontElement = [];\n        var cut = false, stripped = false;\n        var level = -1;\n        while (cache) {\n            itemID = -1;\n            if (ray && ray.collidesWith) {\n                itemID = ray.collidesWith.id;\n                stripped = ray.collidesWith.getType() == "Circle";\n                depth += ray.lambda * Math.cos(Math.abs(angle));\n                currentY = 0.01 + znear / depth;\n                currentX = Math.tan(angle - deltaAngle) * znear * ((index <= _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].resolution / 2) ? -1 : 1);\n                currentT = this.mapTexture(ray.collidesAt, ray.collidesWith);\n                currentColor = (ray.collidesWith ? ray.collidesWith.color + `,${ray.collidesWith.opacity}` : "0,0,0,1")\n                    .split(\',\')\n                    .map((component, i) => { return i < 3 ? parseFloat(component) / 255 : parseFloat(component); });\n            }\n            cut = cache.itemID >= 0 && (cut || (cache.itemID !== itemID || index === _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].resolution - 1 || cache.stripped));\n            if (cut) {\n                this.memoryIndex++;\n                level++;\n                let { x, y, z, t, l } = cache;\n                frontSurf = [\n                    x[0] * z[0], y[0] * z[0], z[0], ...cache.color[0], t[0], 0,\n                    x[1] * z[1], y[1] * z[1], z[1], ...cache.color[1], t[1], 0,\n                    x[1] * z[1], -y[1] * z[1], z[1], ...cache.color[1], t[1], 1,\n                    x[0] * z[0], -y[0] * z[0], z[0], ...cache.color[0], t[0], 1,\n                ]\n                    .concat(frontSurf);\n                frontElement = ([\n                    0, 1, 2,\n                    0, 3, 2,\n                ]\n                    .map((i) => { return i + (this.memoryIndex - level) * 4; })).concat(frontElement.map((i) => { return i + 4; }));\n                lyingSurf = [\n                    x[0] * z[0], l[0] * z[0], z[0], 1,\n                    x[1] * z[1], l[1] * z[1], z[1], 1,\n                    x[1] * z[0], y[1] * z[0], z[0], 1,\n                    x[0] * z[1], y[0] * z[1], z[1], 1,\n                    x[0] * z[0], -y[0] * z[0], z[0], -1,\n                    x[1] * z[1], -y[1] * z[1], z[1], -1,\n                    x[1] * z[1], -l[1] * z[1], z[1], -1,\n                    x[0] * z[0], -l[0] * z[0], z[0], -1,\n                ]\n                    .concat(lyingSurf);\n                lyingElement = [\n                    0, 1, 2,\n                    0, 3, 2,\n                    4, 5, 6,\n                    4, 7, 6\n                ]\n                    .map((i) => { return i + (this.memoryIndex - level) * 8; })\n                    .concat(lyingElement.map((i) => { return i + 8; }));\n                cache.itemID = itemID;\n                cache.color[0] = currentColor;\n                cache.x[0] = x[1];\n                cache.y[0] = currentY;\n                cache.l[0] = currentL;\n                cache.z[0] = depth;\n                cache.t[0] = currentT;\n                cache.stripped = stripped;\n            }\n            if (cache.itemID < 0 && ray) {\n                cache.itemID = itemID;\n                cache.color[0] = currentColor;\n                cache.color[1] = currentColor;\n                cache.x[0] = currentX;\n                cache.y[0] = currentY;\n                cache.t[0] = currentT;\n                cache.l[0] = currentL;\n            }\n            cache.color[1] = currentColor;\n            cache.x[1] = currentX;\n            cache.y[1] = currentY;\n            cache.t[1] = currentT;\n            cache.l[1] = currentL;\n            cache.z[1] = depth;\n            ray = (ray && ray.reflected && ray.reflected.active) ? ray.reflected : null;\n            currentL = currentY;\n            cache = cache.child;\n        }\n        if (!frontSurf.length)\n            return;\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.bindBuffer(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.ARRAY_BUFFER, this.frontBuffer);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.bufferSubData(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.ARRAY_BUFFER, (this.memoryIndex - level) * 9 * 4 * Float32Array.BYTES_PER_ELEMENT, new Float32Array(frontSurf));\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.bindBuffer(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.ELEMENT_ARRAY_BUFFER, this.frontElementBuffer);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.bufferSubData(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.ELEMENT_ARRAY_BUFFER, (this.memoryIndex - level) * 6 * Uint16Array.BYTES_PER_ELEMENT, new Uint16Array(frontElement));\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.bindBuffer(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.ARRAY_BUFFER, this.lyingBuffer);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.bufferSubData(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.ARRAY_BUFFER, (this.memoryIndex - level) * 8 * 4 * Float32Array.BYTES_PER_ELEMENT, new Float32Array(lyingSurf));\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.bindBuffer(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.ELEMENT_ARRAY_BUFFER, this.lyingElementBuffer);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.bufferSubData(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_2__.gl.ELEMENT_ARRAY_BUFFER, (this.memoryIndex - level) * 12 * Uint16Array.BYTES_PER_ELEMENT, new Uint16Array(lyingElement));\n    }\n}\n;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DataModeller);\n//# sourceMappingURL=DataModeller.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/systems/SceneRendering/DataModeller.js?')},"./lib/systems/SceneRendering/Orchestrator.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _kernox_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../kernox.js */ "./vendor/kernox.min.js");\n/* harmony import */ var _SpaceSearcher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SpaceSearcher.js */ "./lib/systems/SceneRendering/SpaceSearcher.js");\n/* harmony import */ var _RayCaster_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RayCaster.js */ "./lib/systems/SceneRendering/RayCaster.js");\n/* harmony import */ var _DataModeller_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DataModeller.js */ "./lib/systems/SceneRendering/DataModeller.js");\n/* harmony import */ var _Renderer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Renderer.js */ "./lib/systems/SceneRendering/Renderer.js");\n/* harmony import */ var _utils_rendering_LocatorGL_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/rendering/LocatorGL.js */ "./lib/utils/rendering/LocatorGL.js");\n/* harmony import */ var _setup_webGL_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../setup/webGL.js */ "./lib/setup/webGL.js");\n/* harmony import */ var _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/scene/Camera.js */ "./lib/utils/scene/Camera.js");\n/* harmony import */ var _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/physics/Vector2D.js */ "./lib/utils/physics/Vector2D.js");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../config.js */ "./lib/config.js");\n/* harmony import */ var _setup_canvases_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../setup/canvases.js */ "./lib/setup/canvases.js");\n\n\n\n\n\n\n\n\n\n\n\nconst ctx = _setup_canvases_js__WEBPACK_IMPORTED_MODULE_10__["default"].canvas2d.getContext(\'2d\');\nclass RenderingPipeline extends _kernox_js__WEBPACK_IMPORTED_MODULE_0__.System {\n    init() {\n        this.spaceSearcher = new _SpaceSearcher_js__WEBPACK_IMPORTED_MODULE_1__["default"](this);\n        this.rayCaster = new _RayCaster_js__WEBPACK_IMPORTED_MODULE_2__["default"](this);\n        this.dataModeller = new _DataModeller_js__WEBPACK_IMPORTED_MODULE_3__["default"](this);\n        this.renderer = new _Renderer_js__WEBPACK_IMPORTED_MODULE_4__["default"](this);\n    }\n    __debugRay__(ray) {\n        if (!_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.castCenter)\n            return;\n        const deg = _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.castCenter?.direction.angle() * (180 / Math.PI);\n        ctx.strokeStyle = \'rgba(255,255,255,0.01)\';\n        ctx.lineWidth = 1;\n        let from = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_8__["default"].rotate(ray.source, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.pos, deg);\n        let to = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_8__["default"].rotate(ray.collidesAt, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.pos, deg);\n        from = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_8__["default"].sub(_utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_8__["default"].sub(from, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.pos), { x: -10, y: -10 }).scale(1.5 * 3);\n        to = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_8__["default"].sub(_utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_8__["default"].sub(to, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.pos), { x: -10, y: -10 }).scale(1.5 * 3);\n        ctx.beginPath();\n        ctx.moveTo(from.x, from.y);\n        ctx.lineTo(to.x, to.y);\n        ctx.closePath();\n        ctx.stroke();\n        if (!ray.reflected || !ray.reflected.active)\n            return;\n        this.__debugRay__(ray.reflected);\n    }\n    execute() {\n        if (!this.locator)\n            return false;\n        if (!_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera || !_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.castEdge || !_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.castCenter)\n            return false;\n        const wallIndices = this.spaceSearcher.getIndicesOfClosest(_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera);\n        const ray = _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.castEdge;\n        const rotationAngle = (_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.FOV / _config_js__WEBPACK_IMPORTED_MODULE_9__["default"].resolution) * (Math.PI / 180) * -1;\n        const complexRotator = [Math.cos(rotationAngle), Math.sin(rotationAngle)];\n        const direction = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_8__["default"].copy(ray.direction);\n        this.dataModeller.reset();\n        for (let i = 0; i < _config_js__WEBPACK_IMPORTED_MODULE_9__["default"].resolution; i++) {\n            ray.direction.complexRotate(complexRotator);\n            if (ray.reflected)\n                ray.reflected.active = false;\n            this.rayCaster.castRay(ray, Object.assign({}, wallIndices));\n            this.__debugRay__(ray);\n            let angle = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_8__["default"].angleBetween(_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_7__.camera.castCenter.direction, ray.direction);\n            this.dataModeller.model(ray, angle, i);\n        }\n        let amount = this.dataModeller.memoryIndex;\n        this.renderer.render(amount);\n        ray.direction = direction;\n        return true;\n    }\n}\n;\n_setup_webGL_js__WEBPACK_IMPORTED_MODULE_6__.locatorPromise\n    .then((locator) => { if (locator instanceof _utils_rendering_LocatorGL_js__WEBPACK_IMPORTED_MODULE_5__["default"])\n    RenderingPipeline.prototype.locator = locator; })\n    .catch((err) => { throw Error(err); });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RenderingPipeline);\n//# sourceMappingURL=Orchestrator.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/systems/SceneRendering/Orchestrator.js?')},"./lib/systems/SceneRendering/RayCaster.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_physics_CollisionDetector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/physics/CollisionDetector.js */ "./lib/utils/physics/CollisionDetector.js");\n/* harmony import */ var _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/physics/Vector2D.js */ "./lib/utils/physics/Vector2D.js");\n\n\nclass RayCaster {\n    constructor(sys) {\n        this.sys = sys;\n        this.horizontalWalls = this.sys.__kernox.collectionManager.get(\'rayven.HorizontalWalls\').toArray();\n        this.verticalWalls = this.sys.__kernox.collectionManager.get(\'rayven.VerticalWalls\').toArray();\n        this.circles = this.sys.__kernox.collectionManager.get(\'rayven.Circles\').toArray();\n    }\n    castRay(ray, indices) {\n        console.log(this.horizontalWalls);\n        if (ray.reflected)\n            ray.reflected.active = false;\n        ray.collidesWith = null;\n        ray.lambda = Infinity;\n        const wallCollision = this.iterativeWallCollisionTest(ray, indices);\n        const circleCollision = this.testAgainstCircles(ray);\n        if (!wallCollision && !circleCollision)\n            return;\n        if (ray.level < 15 && ray.collidesWith.opacity < 1 && this.reflect(ray))\n            this.castRay(ray.reflected, indices);\n    }\n    reflect(ray) {\n        if (!ray.collidesWith)\n            return false;\n        if (!ray.reflected) {\n            ray.reflected = this.sys.__kernox.entityFactory.create(\'Ray\', {});\n            ray.reflected.level = ray.level + 1;\n        }\n        ray.reflected.source = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].copy(ray.collidesAt);\n        ray.reflected.direction = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].copy(ray.direction);\n        ray.reflected.active = true;\n        const surfaceType = ray.collidesWith.getType();\n        const strategy = {\n            HorizontalWall: (reflected) => { reflected.direction.y *= -1; },\n            VerticalWall: (reflected) => { reflected.direction.x *= -1; },\n            Circle: (reflected) => {\n                const circle = ray.collidesWith;\n                const pointToCenter = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].sub(circle.center, ray.collidesAt);\n                const angleBetween = _utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].angleBetween(_utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].scale(ray.direction, -1), pointToCenter);\n                const sense = (ray.direction.x > 0 ? 1 : -1);\n                reflected.direction\n                    .complexRotate([\n                    Math.cos(sense * angleBetween * 2),\n                    Math.sin(sense * angleBetween * 2)\n                ]);\n                reflected.source.add(_utils_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_1__["default"].scale(reflected.direction, 0.01));\n                reflected.direction.scale(-1);\n            }\n        };\n        const reflectStrategy = strategy[surfaceType];\n        if (!reflectStrategy)\n            return false;\n        reflectStrategy(ray.reflected);\n        return true;\n    }\n    iterativeWallCollisionTest(ray, indices) {\n        const sense = { x: ray.direction.x > 0 ? 1 : -1, y: ray.direction.y > 0 ? 1 : -1 };\n        var wallH, wallV, lambdaH, lambdaV, collision;\n        while ((indices.horizontal < this.horizontalWalls.length && sense.y == 1) || (indices.horizontal >= 0 && sense.y == -1) ||\n            (indices.vertical < this.verticalWalls.length && sense.x == 1) || (indices.vertical >= 0 && sense.x == -1)) {\n            wallH = this.horizontalWalls[indices.horizontal + (sense.y == 1 ? 1 : 0)];\n            wallV = this.verticalWalls[indices.vertical + (sense.x == 1 ? 1 : 0)];\n            lambdaH = wallH ? _utils_physics_CollisionDetector_js__WEBPACK_IMPORTED_MODULE_0__["default"].RayVsHorizontalLine(ray, wallH.posY) : Infinity;\n            lambdaV = wallV ? _utils_physics_CollisionDetector_js__WEBPACK_IMPORTED_MODULE_0__["default"].RayVsVerticalLine(ray, wallV.posX) : Infinity;\n            if (lambdaV === lambdaH)\n                break;\n            collision = (lambdaH < lambdaV) ? _utils_physics_CollisionDetector_js__WEBPACK_IMPORTED_MODULE_0__["default"].RayVsHorizontalWall(ray, wallH) : _utils_physics_CollisionDetector_js__WEBPACK_IMPORTED_MODULE_0__["default"].RayVsVerticalWall(ray, wallV);\n            if (collision) {\n                ray.collidesAt = collision;\n                ray.lambda = Math.min(lambdaH, lambdaV);\n                ray.collidesWith = (lambdaH <= lambdaV) ? wallH : wallV;\n                break;\n            }\n            indices.horizontal += (lambdaH <= lambdaV) ? sense.y : 0;\n            indices.vertical += (lambdaH >= lambdaV) ? sense.x : 0;\n        }\n        ;\n        return collision ? true : false;\n    }\n    testAgainstCircles(ray) {\n        var collided = false, collision;\n        for (let i = 0; i < this.circles.length; i++) {\n            collision = _utils_physics_CollisionDetector_js__WEBPACK_IMPORTED_MODULE_0__["default"].RayVsCircle(ray, this.circles[i]);\n            if (!collision)\n                continue;\n            if (ray.lambda <= collision.lambda)\n                continue;\n            collided = true;\n            ray.collidesAt = collision.point;\n            ray.lambda = collision.lambda;\n            ray.collidesWith = this.circles[i];\n        }\n        return collided;\n    }\n}\n;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RayCaster);\n//# sourceMappingURL=RayCaster.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/systems/SceneRendering/RayCaster.js?')},"./lib/systems/SceneRendering/Renderer.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../setup/webGL.js */ "./lib/setup/webGL.js");\n/* harmony import */ var _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/scene/Camera.js */ "./lib/utils/scene/Camera.js");\n/* harmony import */ var _setup_canvases_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../setup/canvases.js */ "./lib/setup/canvases.js");\n\n\n\nconst ctx = _setup_canvases_js__WEBPACK_IMPORTED_MODULE_2__["default"].canvas3d;\nclass Renderer {\n    constructor(sys) {\n        this.sys = sys;\n        this.initialized = false;\n    }\n    init() {\n        const locator = this.sys.locator;\n        this.frontBuffer = locator.getBuffer("ARRAY_BUFFER", "frontBuffer");\n        this.frontElementBuffer = locator.getBuffer("ELEMENT_ARRAY_BUFFER", "frontBuffer");\n        this.lyingBuffer = locator.getBuffer("ARRAY_BUFFER", "lyingBuffer");\n        this.lyingElementBuffer = locator.getBuffer("ELEMENT_ARRAY_BUFFER", "lyingBuffer");\n        this.frontProgram = locator.getProgram(\'front\');\n        this.lyingProgram = locator.getProgram(\'lying\');\n        this.initialized = true;\n    }\n    render(amount) {\n        amount++;\n        if (!_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera || !_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castCenter || !_utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castEdge)\n            return;\n        if (!this.initialized)\n            this.init();\n        const a_color = _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.getAttribLocation(this.frontProgram, \'a_color\');\n        const a_position = _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.getAttribLocation(this.frontProgram, \'a_position\');\n        const a_height = _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.getAttribLocation(this.frontProgram, \'a_height\');\n        const a_texCoord = _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.getAttribLocation(this.frontProgram, \'a_texCoord\');\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.clear(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.COLOR_BUFFER_BIT | _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.DEPTH_BUFFER_BIT);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.useProgram(this.lyingProgram);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.bindBuffer(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.ARRAY_BUFFER, this.lyingBuffer);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.bindBuffer(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.ELEMENT_ARRAY_BUFFER, this.lyingElementBuffer);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.disableVertexAttribArray(a_color);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.enableVertexAttribArray(a_position);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.vertexAttribPointer(a_position, 3, _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT, false, 4 * Float32Array.BYTES_PER_ELEMENT, 0);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.enableVertexAttribArray(a_height);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.vertexAttribPointer(a_height, 1, _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT, false, 4 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.uniform2f(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.getUniformLocation(this.lyingProgram, \'u_resolution\'), ctx.width, ctx.height);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.uniform1f(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.getUniformLocation(this.lyingProgram, \'u_time\'), this.sys.__kernox.frame / 10);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.uniform3f(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.getUniformLocation(this.lyingProgram, \'u_cameraPosition\'), _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.pos.x, 0, _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.pos.y);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.uniform1f(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.getUniformLocation(this.lyingProgram, \'u_cameraAngle\'), _utils_scene_Camera_js__WEBPACK_IMPORTED_MODULE_1__.camera.castCenter.direction.angle());\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.drawElements(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.TRIANGLES, 3 * amount * 4, _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_SHORT, 3 * 0 * Uint16Array.BYTES_PER_ELEMENT);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.disableVertexAttribArray(a_height);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.useProgram(this.frontProgram);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.bindBuffer(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.ARRAY_BUFFER, this.frontBuffer);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.bindBuffer(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.ELEMENT_ARRAY_BUFFER, this.frontElementBuffer);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.vertexAttribPointer(a_position, 3, _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT, false, 9 * Float32Array.BYTES_PER_ELEMENT, 0);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.enableVertexAttribArray(a_color);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.vertexAttribPointer(a_color, 4, _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT, false, 9 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.enableVertexAttribArray(a_texCoord);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.vertexAttribPointer(a_texCoord, 2, _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.FLOAT, false, 9 * Float32Array.BYTES_PER_ELEMENT, 7 * Float32Array.BYTES_PER_ELEMENT);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.uniform2f(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.getUniformLocation(this.frontProgram, \'u_resolution\'), ctx.width, ctx.height);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.drawElements(_setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.TRIANGLES, 3 * amount * 2, _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.UNSIGNED_SHORT, 3 * 0 * Uint16Array.BYTES_PER_ELEMENT);\n        _setup_webGL_js__WEBPACK_IMPORTED_MODULE_0__.gl.disableVertexAttribArray(a_texCoord);\n    }\n    ;\n}\n;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Renderer);\n//# sourceMappingURL=Renderer.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/systems/SceneRendering/Renderer.js?')},"./lib/systems/SceneRendering/SpaceSearcher.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass SpaceSearcher {\n    constructor(sys) {\n        this.verticalWalls = sys.__kernox.collectionManager.get('rayven.VerticalWalls').toArray();\n        this.horizontalWalls = sys.__kernox.collectionManager.get('rayven.HorizontalWalls').toArray();\n    }\n    execute() { }\n    getIndicesOfClosest(camera) {\n        const wallIndices = { horizontal: -1, vertical: -1 };\n        if (this.verticalWalls.length > 0) {\n            let xPositions = this.verticalWalls.map((wall) => wall.posX);\n            wallIndices.vertical = this.BinarySearchForClosest(xPositions, camera.pos.x);\n        }\n        if (this.horizontalWalls.length > 0) {\n            let yPositions = this.horizontalWalls.map((wall) => wall.posY);\n            wallIndices.horizontal = this.BinarySearchForClosest(yPositions, camera.pos.y);\n        }\n        return wallIndices;\n    }\n    BinarySearchForClosest(arr, value) {\n        if (arr.length <= 0)\n            return -1;\n        let leftIndex = 0;\n        let rightIndex = arr.length - 1;\n        let inBetweenIndex = Math.ceil((leftIndex + rightIndex) / 2);\n        let index = inBetweenIndex;\n        let exec = 0;\n        while (leftIndex < rightIndex && exec < 100) {\n            exec++;\n            if (rightIndex == inBetweenIndex) {\n                index = rightIndex;\n                break;\n            }\n            if (arr[inBetweenIndex] < value) {\n                leftIndex = inBetweenIndex;\n            }\n            else if (arr[inBetweenIndex] > value) {\n                rightIndex = inBetweenIndex;\n                index = rightIndex;\n            }\n            else if (arr[inBetweenIndex] == value) {\n                index = inBetweenIndex;\n                break;\n            }\n            ;\n            inBetweenIndex = Math.ceil((leftIndex + rightIndex) / 2);\n        }\n        while (arr[index] >= value)\n            index--;\n        if (exec >= 100)\n            throw Error('Binary Search went out of control');\n        return index;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SpaceSearcher);\n//# sourceMappingURL=SpaceSearcher.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/systems/SceneRendering/SpaceSearcher.js?")},"./lib/utils/physics/CollisionDetector.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Vector2D_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector2D.js */ "./lib/utils/physics/Vector2D.js");\n\nclass CollisionDetector {\n    static RayVsVerticalLine(ray, x) {\n        const lambda = (x - ray.source.x) / ray.direction.x;\n        return lambda > 0 ? lambda : false;\n    }\n    static RayVsVerticalWall(ray, wall) {\n        const lambda = CollisionDetector.RayVsVerticalLine(ray, wall.posX);\n        if (!lambda)\n            return false;\n        const point = _Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].add(ray.source, _Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].scale(ray.direction, lambda));\n        return (point.y >= wall.startY && point.y <= wall.endY) ? point : false;\n    }\n    static RayVsHorizontalLine(ray, y) {\n        const lambda = (y - ray.source.y) / ray.direction.y;\n        return lambda > 0 ? lambda : false;\n    }\n    static RayVsHorizontalWall(ray, wall) {\n        const lambda = CollisionDetector.RayVsHorizontalLine(ray, wall.posY);\n        if (!lambda)\n            return false;\n        const point = _Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].add(ray.source, _Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].scale(ray.direction, lambda));\n        return (point.x >= wall.startX && point.x <= wall.endX) ? point : false;\n    }\n    static RayVsCircle(ray, circle) {\n        if (circle.radius <= 0)\n            throw Error("Invalid circle radius: it must be a positive number");\n        let rayOrigin = ray.source;\n        let OC = _Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].sub(circle.center, rayOrigin);\n        let rayDirection = _Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].normalize(ray.direction);\n        let OAmag = _Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].dot(rayDirection, OC);\n        let CAmagSq = OC.magSq() - OAmag * OAmag;\n        let BAmag = Math.sqrt(circle.radius * circle.radius - CAmagSq);\n        let lambda = OAmag - BAmag;\n        if (!lambda || lambda <= 0)\n            return false;\n        let RayToCircle = rayDirection.scale(lambda);\n        let point = _Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].add(rayOrigin, RayToCircle);\n        return { point, lambda };\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CollisionDetector);\n//# sourceMappingURL=CollisionDetector.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/utils/physics/CollisionDetector.js?')},"./lib/utils/physics/Vector2D.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass Vector2D {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    static copy(v) {\n        return new Vector2D(v.x, v.y);\n    }\n    add(v) {\n        this.x += v.x;\n        this.y += v.y;\n        return this;\n    }\n    static add(v1, v2) {\n        return new Vector2D(v1.x + v2.x, v1.y + v2.y);\n    }\n    sub(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        return this;\n    }\n    static sub(v1, v2) {\n        return new Vector2D(v1.x - v2.x, v1.y - v2.y);\n    }\n    div(v) {\n        this.x /= v.x;\n        this.y /= v.y;\n        return this;\n    }\n    static div(v1, v2) {\n        return new Vector2D(v1.x / v2.x, v1.y / v2.y);\n    }\n    mult(v) {\n        this.x *= v.x;\n        this.y *= v.y;\n        return this;\n    }\n    static mult(v1, v2) {\n        return new Vector2D(v1.x * v2.x, v1.y * v2.y);\n    }\n    abs() {\n        this.x = Math.abs(this.x);\n        this.y = Math.abs(this.y);\n        return this;\n    }\n    static abs(v) {\n        return new Vector2D(Math.abs(v.x), Math.abs(v.y));\n    }\n    dot(v) {\n        return (this.x * v.x) + (this.y * v.y);\n    }\n    static dot(v1, v2) {\n        return (v1.x * v2.x) + (v1.y * v2.y);\n    }\n    magSq() {\n        return (this.x * this.x) + (this.y * this.y);\n    }\n    static magSq(v) {\n        return (v.x * v.x) + (v.y * v.y);\n    }\n    mag() {\n        return Math.sqrt(this.magSq());\n    }\n    static mag(v) {\n        return Math.sqrt(Vector2D.magSq(v));\n    }\n    scale(s) {\n        this.x *= s;\n        this.y *= s;\n        return this;\n    }\n    static scale(v, s) {\n        return new Vector2D(v.x * s, v.y * s);\n    }\n    normalize() {\n        let mag = this.mag();\n        this.x /= mag;\n        this.y /= mag;\n        return this;\n    }\n    angle() {\n        let angle = Math.atan2(this.y, this.x);\n        if (angle < 0) {\n            angle += 2 * Math.PI;\n        }\n        return angle;\n    }\n    static rotate(v, center, deg) {\n        deg *= Math.PI / 180;\n        v = Vector2D.sub(v, center);\n        return Vector2D.add({\n            x: v.dot({ x: Math.cos(deg), y: -Math.sin(deg) }),\n            y: v.dot({ x: Math.sin(deg), y: Math.cos(deg) })\n        }, center);\n    }\n    complexRotate(w) {\n        const temp = this.x;\n        this.x = this.x * w[0] - this.y * w[1];\n        this.y = temp * w[1] + this.y * w[0];\n        return this;\n    }\n    static complexRotate(v, w) {\n        return new Vector2D(v.x * w[0] - v.y * w[1], v.x * w[1] + v.y * w[0]);\n    }\n    ;\n    static normalize(v) {\n        let mag = Vector2D.mag(v);\n        return new Vector2D(v.x / mag, v.y / mag);\n    }\n    static between(v1, v2, percentil) {\n        return new Vector2D(v1.x + (v2.x - v1.x) * percentil, v1.y + (v2.y - v1.y) * percentil);\n    }\n    static perpendicular(v) {\n        return new Vector2D(-1 * v.y, -1 * v.x);\n    }\n    static angleBetween(v1, v2) {\n        let normalizedDotProduct = Vector2D.dot(v1, v2) / (v1.mag() * v2.mag());\n        return Math.acos(Math.min(normalizedDotProduct, 1));\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Vector2D);\n//# sourceMappingURL=Vector2D.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/utils/physics/Vector2D.js?')},"./lib/utils/rendering/BuilderGL.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass BuilderGL {\n    static async loadShaderSource(url) {\n        console.info('Loading shader source', url);\n        const res = await fetch(url);\n        return res.text();\n    }\n    static async buildShader(gl, type, url) {\n        if (!(gl instanceof WebGL2RenderingContext))\n            throw Error(\"The 'gl' parameter must be an instance of 'WebGL2RenderingContext'\");\n        const shaderTypes = {\n            \"FRAGMENT_SHADER\": gl.FRAGMENT_SHADER,\n            \"VERTEX_SHADER\": gl.VERTEX_SHADER\n        };\n        const _type = shaderTypes[type];\n        if (_type === undefined)\n            throw Error(`Invalid shader type '${type}'; the type must be either  FRAGMENT_SHADER or VERTEX_SHADER`);\n        if (typeof url !== 'string' || url == \"\")\n            throw Error(\"Invalid 'url' argument: it must be a non-empty string\");\n        const source = await this.loadShaderSource(url);\n        const shader = gl.createShader(_type);\n        if (!source || !shader)\n            return;\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n        if (success)\n            return shader;\n    }\n    ;\n    static buildProgram(gl, vertexShader, fragmentShader) {\n        if (!(gl instanceof WebGL2RenderingContext))\n            throw Error(\"The 'gl' parameter must be an instance of 'WebGL2RenderingContext'\");\n        if (!(vertexShader instanceof WebGLShader))\n            throw Error(\"Invalid vertex shader: it must be an instance of 'WebGLShader'\");\n        if (!(fragmentShader instanceof WebGLShader))\n            throw Error(\"Invalid fragment shader: it must be an instance of 'WebGLShader'\");\n        var program;\n        program = gl.createProgram();\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n        const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (success)\n            return program;\n        gl.deleteProgram(program);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BuilderGL);\n//# sourceMappingURL=BuilderGL.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/utils/rendering/BuilderGL.js?")},"./lib/utils/rendering/CanvasManager.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass CanvasManager {\n    constructor() {\n        this.canvases = new Map();\n    }\n    createCanvas(details) {\n        const canvasContainer = document.querySelector('.canvasContainer');\n        const canvas = document.createElement('canvas');\n        if (document.getElementById(details.id) !== null || this.canvases.get(details.id) !== undefined) {\n            console.warn(`Violation: unexpectedly, an element already exists having the id '${details.id}' the canvas is supposed to adquire`);\n        }\n        canvas.id = details.id;\n        canvas.width = details.width;\n        canvas.height = details.height;\n        canvas.style.position = 'absolute';\n        if (details.style === null)\n            return canvas;\n        for (let property in details.style) {\n            canvas.style[property] = details.style[property];\n        }\n        if (canvasContainer === null) {\n            document.body.appendChild(canvas);\n            console.warn(\"You must define a <div> container with the id 'canvasContainer'; the canvas will be allocated at the root element '<body>' because the container was not defined \");\n        }\n        else\n            canvasContainer.appendChild(canvas);\n        this.canvases.set(canvas.id, canvas);\n        return canvas;\n    }\n    deleteCanvas(canvas) {\n        const canvasID = canvas.id;\n        this.canvases.delete(canvasID);\n        const canvasContainer = document.querySelector('.canvasContainer');\n        if (canvasContainer === null)\n            return;\n        canvasContainer.removeChild(canvas);\n    }\n    getCanvas(canvasID) {\n        const canvas = this.canvases.get(canvasID);\n        return canvas !== undefined ? canvas : false;\n    }\n}\nconst instance = new CanvasManager();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (instance);\n//# sourceMappingURL=CanvasManager.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/utils/rendering/CanvasManager.js?")},"./lib/utils/rendering/ImageLoader.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");\n    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");\n    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ImageLoader_textures;\nclass ImageLoader {\n    constructor() {\n        _ImageLoader_textures.set(this, new Map());\n    }\n    load(name, src) {\n        if (typeof name !== \'string\' || !name) {\n            throw Error(`Invalid texture name given, it must be a non-empty string`);\n        }\n        if (__classPrivateFieldGet(this, _ImageLoader_textures, "f").get(name))\n            throw Error(`Cannot add texture with name \'${name}\'; the name has already been registered`);\n        try {\n            const image = new Image();\n            image.src = \'./assets/textures/\' + src;\n            __classPrivateFieldGet(this, _ImageLoader_textures, "f").set(name, image);\n        }\n        catch (err) {\n            throw Error(`The image with source \'/img/textures/${src}\' could not be found`);\n        }\n        return true;\n    }\n    remove(name) {\n        return __classPrivateFieldGet(this, _ImageLoader_textures, "f").delete(name);\n    }\n    get(name) {\n        const texture = __classPrivateFieldGet(this, _ImageLoader_textures, "f").get(name);\n        return texture ? texture : false;\n    }\n}\n_ImageLoader_textures = new WeakMap();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ImageLoader);\n//# sourceMappingURL=ImageLoader.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/utils/rendering/ImageLoader.js?')},"./lib/utils/rendering/LocatorGL.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass LocatorGL {\n    constructor() {\n        this.arrayBuffers = new Map();\n        this.elementArrayBuffers = new Map();\n        this.programs = new Map();\n    }\n    __mapTypeToBufferLocation__(type) {\n        const types = {\n            "ARRAY_BUFFER": this.arrayBuffers,\n            "ELEMENT_ARRAY_BUFFER": this.elementArrayBuffers\n        };\n        const location = types[type];\n        if (!location)\n            throw Error("Could not get buffer location: invalid buffer type");\n        return location;\n    }\n    registerBuffer(buffer, type, name) {\n        if (!(buffer instanceof WebGLBuffer))\n            throw Error("Invalid buffer: it must be an instance of \'WebGLBuffer\'");\n        const location = this.__mapTypeToBufferLocation__(type);\n        if (!location)\n            return;\n        if (typeof name !== "string" || !name)\n            throw Error("Invalid name: it must be a  non-empty string");\n        const exists = location.get(name);\n        if (exists)\n            throw Error(`Could not register buffer \'${name}\' as a buffer of type \'${type}\' because it already exists`);\n        location.set(name, buffer);\n        return true;\n    }\n    registerProgram(name, program) {\n        if (typeof name !== "string" || !name)\n            throw Error("Invalid name: it must be a  non-empty string");\n        if (!(program instanceof WebGLProgram))\n            throw Error("Invalid program: it must be an instance of \'WebGLProgram\'");\n        if (this.programs.get(name))\n            throw Error(`Could not register program \'${name}\' because it already exists`);\n        this.programs.set(name, program);\n        return true;\n    }\n    getBuffer(type, name) {\n        const location = this.__mapTypeToBufferLocation__(type);\n        if (!location)\n            return false;\n        const buffer = location.get(name);\n        return buffer ? buffer : false;\n    }\n    ;\n    getProgram(name) {\n        const program = this.programs.get(name);\n        if (!program)\n            return false;\n        return program;\n    }\n    ;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LocatorGL);\n//# sourceMappingURL=LocatorGL.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/utils/rendering/LocatorGL.js?')},"./lib/utils/scene/Camera.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Camera: () => (/* binding */ Camera),\n/* harmony export */   camera: () => (/* binding */ camera)\n/* harmony export */ });\n/* harmony import */ var _physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../physics/Vector2D.js */ "./lib/utils/physics/Vector2D.js");\n\nclass Camera {\n    constructor() {\n        this.initialized = false;\n        this.wallIndices = { horizontal: NaN, vertical: NaN };\n        this.FOV = NaN;\n        this.pos = new _physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"](NaN, NaN);\n    }\n    ;\n    init(app, info) {\n        var { x, y, fov, dx, dy } = info;\n        this.FOV = fov;\n        this.pos = new _physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"](x, y);\n        if (this.initialized) {\n            console.warn("Attempted to initialize an already initialized instance of \'Camera\'");\n            return false;\n        }\n        camera.castCenter = app.entityFactory.create(\'Ray\', {\n            source: camera.pos,\n            direction: _physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].normalize(new _physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"](dx, dy))\n        });\n        camera.castEdge = app.entityFactory.create(\'Ray\', {\n            source: camera.pos,\n            direction: _physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].complexRotate(_physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"].normalize(new _physics_Vector2D_js__WEBPACK_IMPORTED_MODULE_0__["default"](dx, dy)), [Math.cos(camera.FOV * Math.PI / 360), Math.sin(camera.FOV * Math.PI / 360)])\n        });\n        return this.initialized = true;\n    }\n}\n;\nconst camera = new Camera();\n\n//# sourceMappingURL=Camera.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/utils/scene/Camera.js?')},"./lib/utils/scene/SceneBuilder.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass SceneBuilder {\n    constructor(app) {\n        this.app = app;\n    }\n    build(scene) {\n        const horizontal = [];\n        const vertical = [];\n        const circles = [];\n        scene.forEach((element) => {\n            if (element.type == \"Wall\") {\n                let segment = element.info;\n                let vertexA = segment[0];\n                let vertexB = segment[1];\n                if (vertexA[0] == vertexB[0] && vertexA[1] != vertexB[1]) {\n                    const wall = this.buildVerticalWall(vertexA, vertexB, segment[2], segment[3]);\n                    vertical.push(wall);\n                }\n                else if (vertexA[1] == vertexB[1] && vertexA[0] != vertexB[0]) {\n                    const wall = this.buildHorizontalWall(vertexA, vertexB, segment[2], segment[3]);\n                    horizontal.push(wall);\n                }\n                else {\n                    console.warn(`Invalid vertex pair given: the vertices must be different and colinear`);\n                }\n            }\n            else if (element.type == 'Circle') {\n                const circle = this.buildCircle(...element.info);\n                circles.push(circle);\n            }\n        });\n        horizontal.sort((a, b) => { return a.posY - b.posY; });\n        vertical.sort((a, b) => { return a.posX - b.posX; });\n        horizontal.forEach(wall => { this.app.collectionManager.addEntityTo(wall, 'HorizontalWalls'); });\n        vertical.forEach(wall => { this.app.collectionManager.addEntityTo(wall, 'VerticalWalls'); });\n        circles.forEach(circle => { this.app.collectionManager.addEntityTo(circle, 'Circles'); });\n    }\n    buildHorizontalWall(vertexA, vertexB, opacity, color) {\n        return this.app.entityFactory.create('HorizontalWall', {\n            startX: Math.min(vertexA[0], vertexB[0]),\n            endX: Math.max(vertexA[0], vertexB[0]),\n            posY: vertexA[1],\n            opacity: opacity || 1,\n            color: color || 'white'\n        });\n    }\n    ;\n    buildVerticalWall(vertexA, vertexB, opacity, color) {\n        return this.app.entityFactory.create('VerticalWall', {\n            startY: Math.min(vertexA[1], vertexB[1]),\n            endY: Math.max(vertexA[1], vertexB[1]),\n            posX: vertexA[0],\n            opacity: opacity || 1,\n            color: color || 'white'\n        });\n    }\n    ;\n    buildCircle(...args) {\n        return this.app.entityFactory.create('Circle', {\n            radius: args[1],\n            center: args[0],\n            opacity: args[2],\n            color: args[3]\n        });\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SceneBuilder);\n//# sourceMappingURL=SceneBuilder.js.map\n\n//# sourceURL=webpack://typescript-practice/./lib/utils/scene/SceneBuilder.js?")},"./vendor/kernox.min.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArrayList: () => (/* binding */ __webpack_exports__ArrayList),\n/* harmony export */   Kernox: () => (/* binding */ __webpack_exports__Kernox),\n/* harmony export */   System: () => (/* binding */ __webpack_exports__System)\n/* harmony export */ });\n/******/ // The require scope\n/******/ var __nested_webpack_require_43__ = {};\n/******/ \n/************************************************************************/\n/******/ /* webpack/runtime/define property getters */\n/******/ (() => {\n/******/ \t// define getter functions for harmony exports\n/******/ \t__nested_webpack_require_43__.d = (exports, definition) => {\n/******/ \t\tfor(var key in definition) {\n/******/ \t\t\tif(__nested_webpack_require_43__.o(definition, key) && !__nested_webpack_require_43__.o(exports, key)) {\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t};\n/******/ })();\n/******/ \n/******/ /* webpack/runtime/hasOwnProperty shorthand */\n/******/ (() => {\n/******/ \t__nested_webpack_require_43__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ })();\n/******/ \n/************************************************************************/\nvar __nested_webpack_exports__ = {};\n\n// EXPORTS\n__nested_webpack_require_43__.d(__nested_webpack_exports__, {\n  mx: () => (/* reexport */ ArrayList),\n  wE: () => (/* binding */ Kernox),\n  iQ: () => (/* reexport */ System)\n});\n\n;// ./lib/addon/AddonLoader.js\nclass AddonLoader {\n    constructor(__kernox) {\n        this.__kernox = __kernox;\n        this.__namespaces = new Set();\n    }\n    /**\n     * Integrates an \'addon\' to the application instance, registering and setting up resources.\n     * @param addon Object that packages resources belonging to a context: it can contain a list of systems, collections, event listeners\n     * and entity prototypes, which will be registered.\n     * @example\n     * import { Kernox, KernoAddon } from "../../dist/kernox.js";\n     \n     const app = new Kernox();\n\n     // Recommended setup structure:\n     \n     import { prototypes  }   from "./setup/prototypes.js";\n     import { listeners   }   from "./setup/listeners.js";\n     import { systems     }   from "./setup/systems.js";\n     import { collections }   from "./setup/collections.js";\n     \n     // Resource bundler (Addon)\n     \n     const demoApp : KernoAddon = {\n         name : "demoApp",\n         prototypes,\n         systems,\n         collections,\n         listeners\n     };\n          \n    app.use(demoApp); // << Integrating addon to application\n     */\n    use(addon) {\n        const { name } = addon;\n        if (this.namespaces.has(name)) {\n            throw new Error(`Conflict with already existing namespace \'${name}\', please consider renaming one of them.`);\n        }\n        if (addon.collections)\n            this.registerCollections(addon.collections, name);\n        if (addon.prototypes)\n            this.registerPrototypes(addon.prototypes, name);\n        if (addon.systems)\n            this.registerSystems(addon.systems, name);\n        this.namespaces.add(name);\n    }\n    /**\n     * Retrieves all namespaces registered. A namespace indicates the context a resource belongs to: every addon has its own namespace,\n     * which isolates their resources, preventing name collisions.\n     * @returns A string set containing all namespaces\n     * @example\n     * import { Kernox, KernoAddon } from "../../dist/kernox.js";\n     * const app = new Kernox();\n     *\n     * app.use({\n     *     name : "physics"\n     *     // ...\n     * });\n     *\n     * app.use({\n     *     name : "graphics"\n     *     // ...\n     * });\n     *\n     * app.addonLoader.namespaces(); // Set(2) { "physics", "graphics" }\n     \n     */\n    get namespaces() {\n        return this.__namespaces;\n    }\n    registerPrototypes(prototypes, namespace) {\n        prototypes.forEach(proto => {\n            this.__kernox.entityFactory.prototype(proto, namespace);\n        });\n    }\n    registerCollections(collections, namespace) {\n        collections.forEach(collection => {\n            this.__kernox.collectionManager.use(collection, namespace);\n        });\n    }\n    registerSystems(systems, namespace) {\n        systems.forEach(system => {\n            this.__kernox.systemManager.use(system, namespace);\n        });\n    }\n}\n//# sourceMappingURL=AddonLoader.js.map\n;// ./lib/collection/AbstractCollection.js\nclass AbstractCollection {\n}\n//# sourceMappingURL=AbstractCollection.js.map\n;// ./lib/utils/isSubclassOf.js\nfunction isSubclassOf(child, parent) {\n    let proto = child.prototype;\n    while (proto) {\n        proto = Object.getPrototypeOf(proto);\n        if (proto === parent.prototype) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=isSubclassOf.js.map\n;// ./lib/collection/CollectionManager.js\n\n\nclass CollectionManager {\n    constructor(__kernox) {\n        this.__kernox = __kernox;\n        this.collections = new Map();\n        this.toRemove = new Set();\n    }\n    /**\n     * Searches for a collection by name and retrieves it if found.\n     * @param collectionName Name of collection\n     * @returns\n     */\n    get(collectionName) {\n        const collection = this.collections.get(collectionName) || this.resolveImplicitNamespace(collectionName);\n        if (!collection) {\n            throw new Error(`Collection \'${collectionName}\' is not registered.`);\n        }\n        return collection;\n    }\n    /**\n     * Registers new collection based on a constructor; the collection is identified by the name of its parent class.\n     * @param Ctr sub-class of AbstractCollection.\n     * @param namespace Optional parameter used by AddonLoader to specify a context when loading collections from an addon.\n     */\n    use(Ctr, namespace = \'\') {\n        if (!(isSubclassOf(Ctr, AbstractCollection))) {\n            throw new Error("Invalid collection: it must be a sub-class of AbstractCollection");\n        }\n        const name = namespace ? `${namespace}.${Ctr.name}` : Ctr.name;\n        if (this.collections.has(name)) {\n            throw new Error(`Cannot register collection \'${name}\' because it already exists`);\n        }\n        const collection = new Ctr();\n        this.collections.set(name, collection);\n    }\n    addEntityTo(entity, collectionName) {\n        const collection = this.get(collectionName);\n        collection.insert(entity);\n        entity.linkTo(collectionName);\n    }\n    removeEntityFrom(entity, collectionName) {\n        const collection = this.get(collectionName);\n        collection.remove(entity);\n        entity.unlinkFrom(collectionName);\n    }\n    remindToForget(entity) {\n        this.toRemove.add(entity);\n    }\n    flushRemoved() {\n        for (const entity of this.toRemove) {\n            for (const collectionName of entity.collections()) {\n                this.removeEntityFrom(entity, collectionName);\n            }\n        }\n        this.toRemove.clear();\n    }\n    resolveImplicitNamespace(collectionName) {\n        const namespaces = this.__kernox.addonLoader.namespaces;\n        var resolved, resource;\n        for (const namespace of namespaces) {\n            resource = this.collections.get(`${namespace}.${collectionName}`);\n            if (resource && !resolved)\n                resolved = resource;\n            else if (resource) {\n                throw new Error(`Ambiguous collection \'${collectionName}\' was requested: a namespace must be specified before it ( Ex. namespace.collectionName ).`);\n            }\n        }\n        return resolved;\n    }\n}\n//# sourceMappingURL=CollectionManager.js.map\n;// ./lib/entity/Entity.js\n/**\n * First class citizen object whose attributes can be inherited from n other entity types, can be\n * subscribed to entity collections and processed by other functions or class methods. It does not contain behaviour appart from getters and state validators.\n */\nclass Entity {\n    constructor(__ID, __TYPE) {\n        this.__ID = __ID;\n        this.__TYPE = __TYPE;\n        this.__children = {};\n        this.__collections = new Set();\n        this.__modified = false;\n    }\n    get id() {\n        return this.__ID;\n    }\n    get type() {\n        return this.__TYPE;\n    }\n    belongsTo(collectionName) {\n        return this.__collections.has(collectionName);\n    }\n    collections() {\n        return this.__collections;\n    }\n    linkTo(collectionName) {\n        this.__collections.add(collectionName);\n    }\n    unlinkFrom(collectionName) {\n        this.__collections.delete(collectionName);\n    }\n    appendChild(name, child) {\n        if (this.__children[name])\n            throw Error(`Child already exists with name \'${name}\' at entity \'${this.__ID}\'`);\n        this.__children[name] = child;\n    }\n    getChild(name) {\n        return this.__children[name];\n    }\n    deleteChild(name) {\n        delete this.__children[name];\n    }\n}\n//# sourceMappingURL=Entity.js.map\n;// ./lib/entity/EntityFactory.js\n\nclass EntityFactory {\n    constructor(__kernox) {\n        this.__kernox = __kernox;\n        this.types = new Map();\n        this.pools = new Map();\n        this.nextID = 0;\n    }\n    /**\n     * Registers an entity prototype, based on which entities from a type will be created. The prototype can\n     * extend one or more existing prototypes, resulting on a base object having all attributes of its parents.\n     * @param prototype Schema that defines the prototype attributes, and other details\n     * @param namespace Specifies the addon-related context of the given prototype\n     * @example\n     *\n     * import { Kernox } from "kernox";\n     * import type { Entity, PrototypeSchema } from "kernox";\n\n        // Application instance\n\n        const app = new Kernox();\n        \n        // Interface of entity type (optional but recommended)\n\n        export interface Circle extends Entity {\n            position   : Vector2D;\n            radius     : number;\n            color      : string;\n        };\n        \n        // Define prototype of type \'Circle\'\n\n        export const circlePrototype : PrototypeSchema<Circle> = {\n            name : "Circle",\n            attributes : {\n                position   : new Vector2D(0,0),\n                radius : 1,\n                color : "rgb(255,0,0)"\n            } as Circle,\n            collections : new Set([ "Renderables" ])\n        };\n     \n        // Register prototype\n\n        app.entityFactory.prototype(circlePrototype);\n     */\n    prototype(prototype, namespace = \'\') {\n        const name = namespace ? `${namespace}.${prototype.name}` : prototype.name;\n        if (this.types.has(name))\n            throw Error(`The type named \'${name}\' has already been registered`);\n        // Inherit attributes and collections from parent types\n        const { inherits } = prototype;\n        if (inherits) {\n            const parents = inherits;\n            const stack = [];\n            for (const parent of parents) {\n                stack.push(parent);\n            }\n            let current = stack.pop();\n            while (current) {\n                // Copy each property from parent type to the new type\n                const temp = {};\n                this.deepAssign(temp, current.attributes);\n                this.deepAssign(temp, prototype.attributes);\n                prototype.attributes = temp;\n                // Join type collections with collections belonging to parent type\n                prototype.collections = new Set([\n                    ...(prototype.collections || []),\n                    ...(current.collections || [])\n                ]);\n                for (const parent of (current.inherits || [])) {\n                    stack.push(parent);\n                }\n                current = stack.pop();\n            }\n        }\n        this.types.set(name, prototype);\n    }\n    /**\n     * Instantiates an entity: an object populated with the attributes defined by its prototype, which by default\n     * contains the same values as it. Specific values can be assigned by adding them to the \'params\' dictionary.\n     * @param type Entity type, related to an existing prototype\n     * @param params Dictionary of custom parameters, with which an entity\'s matching attributes will be defined\n     * @returns An entity of the given type built based on its prototype (and parameters if any)\n     */\n    create(type, params = {}) {\n        const prototype = this.types.get(type) || this.resolveImplicitNamespace(type);\n        if (!prototype) {\n            throw Error(`Cannot create entity of null type \'${type}\'`);\n        }\n        const entity = new Entity(\'\' + this.nextID++, type);\n        this.deepAssign(entity, prototype.attributes);\n        for (const param of Object.keys(params)) {\n            if (param in entity && !param.includes("_"))\n                entity[param] = params[param];\n        }\n        // Extract context (namespace) for automatic inference whenever collection context isn\'t explicit.\n        const splitted = type.split(".");\n        const context = splitted.length == 2 ? splitted[0] : undefined;\n        // Assign entity to collections\n        for (let collection of (prototype.collections || [])) {\n            if (context)\n                collection = `${context}.${collection}`;\n            this.__kernox.collectionManager.addEntityTo(entity, collection);\n            entity.linkTo(collection);\n        }\n        return entity;\n    }\n    copyFromPrototype(recipient, prototype) {\n        this.deepAssign(recipient, prototype.attributes);\n    }\n    sendToRest(entity) {\n    }\n    resolveImplicitNamespace(type) {\n        const namespaces = this.__kernox.addonLoader.namespaces;\n        var resolved, resource;\n        for (const namespace of namespaces) {\n            resource = this.types.get(`${namespace}.${type}`);\n            if (resource && !resolved)\n                resolved = resource;\n            else if (resource)\n                throw new Error(`Ambiguous entity type \'${type}\' was requested: a namespace must be specified before it ( Ex. namespace.type ).`);\n        }\n        return resolved;\n    }\n    /**\n     * Copies all attributes of a prototype into a recipient; if the prototype contains\n     * objects or instances, original references are untouched, and deep copies are created instead.\n     * @param recipient Destiny object, which will carry the properties\n     * @param prototype Base object, from which properties are copied\n     * @param seen (internal) Stores already assigned objects to avoid reasigning them on recursive calls\n     * @returns Nothing, it mutates the recipient object\n     */\n    deepAssign(recipient, prototype, seen = new WeakMap()) {\n        if (seen.has(prototype))\n            return;\n        seen.set(prototype, recipient);\n        for (const key of Object.keys(prototype)) {\n            const value = prototype[key];\n            // Primitives\n            if (value === null || typeof value !== \'object\') {\n                recipient[key] = value;\n            }\n            // Arrays\n            else if (Array.isArray(value)) {\n                recipient[key] = [];\n                this.deepAssign(recipient[key], value, seen);\n            }\n            // Class instance\n            else if (value.constructor !== Object) {\n                recipient[key] = new value.constructor();\n                this.deepAssign(recipient[key], value, seen);\n            }\n            // Plane object\n            else {\n                recipient[key] = {};\n                this.deepAssign(recipient[key], value, seen);\n            }\n        }\n    }\n}\n//# sourceMappingURL=EntityFactory.js.map\n;// ./lib/event/EventBroker.js\nclass EventBroker {\n    constructor(__kernox) {\n        this.__kernox = __kernox;\n        this.listeners = new Map();\n    }\n    /**\n     * Dispatches an event to all listeners.\n     * @param eventName The name of the event to dispatch.\n     * @param detail Optional payload.\n     * @example\n\n     * import { app } from "./main"; // << Your application instance\n     *\n     * // Fire event...\n     * app.eventBroker.dispatch("test", {\n     *     message : "A test event was fired"\n     * });\n     *\n     * // Note: you may call this method whenever something special happens at your systems\n     */\n    dispatch(eventName, detail) {\n        const listeners = this.listeners[eventName] || this.resolveImplicitNamespace(eventName);\n        if (!listeners)\n            return false;\n        for (const handler of listeners)\n            handler(detail);\n        return true;\n    }\n    /**\n     * Subscribes function to a given event.\n     * @param eventName The event to listen to.\n     * @param handler Handler function which will be called when the event is fired\n     * @example\n     *\n     * import { Kernox, System } from "kernox";\n     *\n     * const app = new Kernox(); // << Your application instance\n     *\n     * const onPlayerMove = (details) => {\n     *     console.log("Event was fired", details);\n     * };\n     *\n     * app.eventBroker.attachToEvent("playerMove", onPlayerMove);\n     */\n    attachToEvent(eventName, handler) {\n        if (!eventName || typeof eventName != "string") {\n            throw new Error(`[EventManager] invalid event name provided: it must be a non-empty string`);\n        }\n        if (typeof handler !== "function") {\n            throw new Error(`Expected function as \'handler\'`);\n        }\n        if (!this.listeners[eventName])\n            this.listeners[eventName] = new Set();\n        return this.listeners[eventName].add(handler);\n    }\n    resolveImplicitNamespace(eventName) {\n        const namespaces = this.__kernox.addonLoader.namespaces;\n        var resolved, resource;\n        for (const namespace of namespaces) {\n            resource = this.listeners[`${namespace}.${eventName}`];\n            if (resource && !resolved)\n                resolved = resource;\n            else if (resource) {\n                throw new Error(`Ambiguous event \'${eventName}\' was requested: a namespace must be specified before it ( Ex. namespace.eventName ).`);\n            }\n        }\n        return resolved;\n    }\n}\n//# sourceMappingURL=EventBroker.js.map\n;// ./lib/system/System.js\n/**\n * Encapsulates application logic which is part of kernox\'s execution loop.\n *\n * Systems are firt-class-citizens: they can emit and listen to events, request and update collections,\n * and process entities.\n */\nclass System {\n    constructor(__kernox, __context) {\n        this.__kernox = __kernox;\n        this.__context = __context;\n        this.__paused = false;\n    }\n    /**\n     * Called once during addon setup.\n     */\n    init() { }\n    /**\n     * Method called by kernox on every frame, when paused is false.\n     */\n    execute() { }\n    /**\n     * Name of the addon the system is related to.\n     */\n    get context() {\n        return this.__context;\n    }\n    /**\n     * Prevents the execution of the system when true.\n     */\n    get paused() {\n        return this.__paused;\n    }\n    set paused(state) {\n        this.__paused = state;\n    }\n    /**\n     * Attaches callback to an event, so it is called whenever the event is emitted.\n     *\n     * Note: By default, the system\'s context is assumed, unless a namespace is defined (ex. eventName = \'physics.collision\').\n     * @param eventName Name of the event (it is registered if not yet).\n     * @param callback Handler function that receives one parameter.\n     * @returns True if attachment was successfull, false otherwise.\n     * @example\n     *\n     * import { System } from "kernox";\n     *\n     * class MovementSystem extends System {\n     *\n     *    public init(){\n     *       this.attachToEvent("playerInput", this.onPlayerInput)\n     *    };\n     *\n     *    public execute(){\n     *      // Etc...\n     *    }\n     *\n     *    public onPlayerInput(details){\n     *       console.log("The player interacted", details);\n     *    }\n     * };\n     */\n    attachToEvent(eventName, handler) {\n        const resourceName = this.resolveResourceName(eventName);\n        return this.__kernox.eventBroker.attachToEvent(resourceName, handler);\n    }\n    /**\n     * Notifies an event to the EventBroker.\n     *\n     * Note: By default, the system\'s context is assumed, unless a namespace is defined (ex. eventName = \'physics.collision\').\n     * @param eventName Name of the event.\n     * @param details Additional information related to the event.\n     * @example\n     * import { System } from "kernox";\n     * import { player } from "./player";\n     *\n     * class MovementSystem extends System {\n     *\n     *    public init(){\n     *       this.attachToEvent("playerInput", this.onPlayerInput)\n     *    };\n     *\n     *    public execute(){\n     *      if(player.jumped) this.dispatchEvent("playerJump", { player });\n     *      // Event triggered when player jumps ^^^\n     *    }\n     * };\n     */\n    dispatchEvent(eventName, details) {\n        this.__kernox.eventBroker.dispatch(eventName, details);\n    }\n    /**\n     * Retrieves a collection to CollectionManager if found.\n     * @param collectionName Name of collection\n     * @returns an entitity collection or undefined\n     */\n    getCollection(collectionName) {\n        const resourceName = this.resolveResourceName(collectionName);\n        const collection = this.__kernox.collectionManager.get(resourceName);\n        if (!collection)\n            throw Error(`Collection \'${resourceName}\' was not found`);\n        return collection;\n    }\n    /**\n     * @param resourceName Name of whatever it is being requested\n     * @returns\n     */\n    resolveResourceName(resourceName) {\n        const splittedName = resourceName.split(".");\n        var context = this.context;\n        var baseName = resourceName;\n        if (splittedName.length == 2)\n            [context, baseName] = splittedName;\n        const fullName = context ? `${context}.${baseName}` : resourceName;\n        return fullName;\n    }\n}\n//# sourceMappingURL=System.js.map\n;// ./lib/system/SystemManager.js\n\n\nclass SystemManager {\n    constructor(__kernox) {\n        this.__kernox = __kernox;\n        this.systems = new Map();\n        this.executionList = [];\n    }\n    /**\n     * @description Executes all systems sequentially.\n     * Systems are executed in the order they were registered.\n     */\n    execute() {\n        this.executionList.forEach((system) => { if (!system.paused)\n            system.execute(); });\n    }\n    /**\n     * @description Vinculates a system, so that it\'s execution method is called on every frame.\n     * @param system An instance of \'System\'.\n     * @returns True if new system is registered, false otherwise.\n     */\n    use(Ctor, namespace = \'\') {\n        const systemName = namespace ? `${namespace}.${Ctor.name}` : Ctor.name;\n        if (!isSubclassOf(Ctor, System)) {\n            throw new Error("Expected instance of \'System\'");\n        }\n        if (this.systems.has(systemName)) {\n            console.warn(`System \'${systemName}\' is already registered`);\n            return false;\n        }\n        const system = new Ctor(this.__kernox, namespace);\n        system.init();\n        this.systems.set(systemName, system);\n        this.executionList.push(system);\n        return true;\n    }\n    /**\n     * Removes system from the execution list and registry.\n     * @param systemName A string corresponding to the class of the system to remove.\n     */\n    unuse(systemName) {\n        const system = this.systems.get(systemName);\n        if (!system)\n            return;\n        this.systems.delete(systemName);\n        this.executionList = this.executionList.filter(s => s !== system);\n    }\n    get(systemName) {\n        return this.systems.get(systemName);\n    }\n}\n//# sourceMappingURL=SystemManager.js.map\n;// ./lib/collection/ArrayList.js\n\nclass ArrayList extends AbstractCollection {\n    constructor() {\n        super(...arguments);\n        this.entities = new Set();\n        this.__changed = false;\n    }\n    /**\n     * Appends an entity at the end of the current collection.\n     * @returns True if a new entity was added, and false otherwise.\n     */\n    insert(entity) {\n        if (this.has(entity))\n            return false;\n        this.entities.add(entity);\n        entity.linkTo(this.constructor.name);\n        this.__changed = true;\n        return true;\n    }\n    /**\n     * Removes an entity from the current collection, if exists.\n     * @returns True if the entity was removed, and false otherwise.\n     */\n    remove(entity) {\n        if (!this.entities.delete(entity))\n            return false;\n        entity.unlinkFrom(this.constructor.name);\n        this.__changed = true;\n        return true;\n    }\n    /**\n     * Evaluates if a given entity belongs to the collection.\n     */\n    has(entity) {\n        return this.entities.has(entity);\n    }\n    *[Symbol.iterator]() {\n        const arr = this.toArray();\n        for (let i = 0; i < this.size(); i++) {\n            yield arr[i];\n        }\n    }\n    /**\n     * @param start Initial index: by default equals zero.\n     * @param end   Final index; if negative, it points from right to left (ej. -1 points to last element).\n     * @param step  Index increment: can be positive or negative, but not be zero. Equals one by default.\n     * @returns An iterator for a given index range and step constant.\n     * @example\n     *\n     * for(const entity of collection.iterator(0,10,2)){\n     *     // Iterates from index zero to ten incrementing by two each time\n     *     console.log(entity);\n     * }\n     *\n     * for(const entity of collection.iterator(0,-1,1)){\n     *     // Iterates from index zero to last\n     *     console.log(entity);\n     * }\n     *\n     */\n    iterator(start = 0, end = -1, step = 1) {\n        if (step == 0) {\n            throw Error("Attempted to create non-changing iterator: \'step\' parameter cannot be zero");\n        }\n        const size = this.size();\n        if (end < 0)\n            end = size - end;\n        // Limit iteration ranges to avoid indices out of range\n        start = Math.max(0, start) - 1;\n        end = Math.min(end, size - 1);\n        var index = start;\n        const entities = this.toArray();\n        return {\n            [Symbol.iterator]() {\n                return this;\n            },\n            next() {\n                if (index < size && index <= end)\n                    return { value: entities[index += step], done: false };\n                else\n                    return { value: undefined, done: true };\n            }\n        };\n    }\n    /**\n     * @returns An array populated with all entities within the collection.\n     */\n    toArray() {\n        return Array.from(this.entities);\n    }\n    /**\n     * @param criteria Boolean callback used to filter entities.\n     * @returns Similar to \'toArray\', but returns a filtered array of entities from the collection.\n     */\n    filter(criteria) {\n        return this.toArray().filter(criteria);\n    }\n    /**\n     * @returns The number of entities within the collection.\n     */\n    size() {\n        return this.entities.size;\n    }\n    get changed() {\n        return this.__changed;\n    }\n}\n//# sourceMappingURL=ArrayList.js.map\n;// ./lib/Kernox.js\n\n\n\n\n\n\n\n/**\n * Top-level application component: central integration point that handles all resources, including entities,\n * collections, systems, and events.\n */\nclass Kernox {\n    constructor() {\n        this.__entityFactory = new EntityFactory(this);\n        this.__collectionManager = new CollectionManager(this);\n        this.__systemManager = new SystemManager(this);\n        this.__eventBroker = new EventBroker(this);\n        this.__addonLoader = new AddonLoader(this);\n        this.__frame = 0;\n        this.__paused = false;\n        this.__lastTime = 0;\n        this.__dt = 1;\n        this.__fps = 0;\n    }\n    /**\n     * Kernox\'s top-level method, it starts the execution loop triggering subordinate systems.\n     */\n    execute(timeSpan = 30) {\n        try {\n            if (this.paused)\n                return;\n            this.__dt = timeSpan - this.__lastTime;\n            this.__fps = 1000 / this.dt;\n            this.__lastTime = timeSpan;\n            requestAnimationFrame((timeSpan) => this.execute(timeSpan));\n            this.__systemManager.execute();\n            this.__frame++;\n        }\n        catch (err) {\n            console.error(err);\n            console.warn("A run-time error has occurred, execution was paused");\n            this.__paused = true;\n        }\n    }\n    /**\n       * Integrates an \'addon\' to the application instance, registering and setting up resources.\n       * @param addon Object that packages resources belonging to a context: it can contain a list of systems, collections, event listeners\n       * and entity prototypes, which will be registered.\n       * @example\n       * import { Kernox, KernoAddon } from "../../dist/kernox.js";\n       \n       const app = new Kernox();\n  \n       // Recommended setup structure:\n       \n       import { prototypes  }   from "./setup/prototypes.js";\n       import { listeners   }   from "./setup/listeners.js";\n       import { systems     }   from "./setup/systems.js";\n       import { collections }   from "./setup/collections.js";\n       \n       // Resource bundler (Addon)\n       \n       const demoApp : KernoAddon = {\n           name : "demoApp",\n           prototypes,\n           systems,\n           collections,\n           listeners\n       };\n            \n      app.addonLoader.use(demoApp); // << Integrating addon to application\n       */\n    use(addon) {\n        this.__addonLoader.use(addon);\n    }\n    /**\n     * Manages the construction and recycling of entities, and can assamble prototypes to define archetypes;\n     * it creates an object pools for each archetype to allocate unused entities for posterior reusal.\n     */\n    get entityFactory() {\n        return this.__entityFactory;\n    }\n    /**\n     * Creates, retrieves and updates collections. A collection is a data structure containing entities; there are\n     * several types of collections: linear (array), sorted (array), etc...\n     */\n    get collectionManager() {\n        return this.__collectionManager;\n    }\n    /**\n     * Vinculates and runs System instances sequentially.\n     */\n    get systemManager() {\n        return this.__systemManager;\n    }\n    /**\n     * Dispatches emitted events to subscribed systems, by calling their handler method.\n     */\n    get eventBroker() {\n        return this.__eventBroker;\n    }\n    get addonLoader() {\n        return this.__addonLoader;\n    }\n    get frame() {\n        return this.__frame;\n    }\n    get paused() {\n        return this.__paused;\n    }\n    get dt() {\n        return this.__dt;\n    }\n    get fps() {\n        return this.__fps;\n    }\n}\n\n//# sourceMappingURL=Kernox.js.map\nvar __webpack_exports__ArrayList = __nested_webpack_exports__.mx;\nvar __webpack_exports__Kernox = __nested_webpack_exports__.wE;\nvar __webpack_exports__System = __nested_webpack_exports__.iQ;\n\n\n\n//# sourceURL=webpack://typescript-practice/./vendor/kernox.min.js?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./lib/rayven.js");